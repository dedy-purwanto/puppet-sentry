# this file is generated by puppet based on sentry/templates/sentry.conf.py.erb
#
import os.path

CONF_ROOT = os.path.dirname(__file__)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(CONF_ROOT, 'sentry.db'),
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}

<% if @url_prefix -%>
# No trailing slash!
SENTRY_URL_PREFIX = '<%= url_prefix %><%= sub_url %>'
# see https://github.com/getsentry/sentry/issues/392#issuecomment-5106565
<% if @sub_url -%>
FORCE_SCRIPT_NAME = '<%= sub_url %>'
SESSION_COOKIE_PATH = '<%= sub_url %>'
<% end -%>

<% else -%>
# You should configure the absolute URI to Sentry. It will attempt to guess it
# if you don't but proxies may interfere with this.
# No trailing slash!
# SENTRY_URL_PREFIX = 'http://sentry.example.com'
<% end -%>

# SENTRY_KEY is a unique randomly generated secret key for your server, and it
# acts as a signing token
SENTRY_KEY = '<%= key %>'

SENTRY_WEB_HOST = '0.0.0.0'
SENTRY_WEB_PORT = <%= web_port %>
SENTRY_WEB_OPTIONS = {
    'workers': <%= workers %>,  # the number of gunicorn workers
}

# defaults to False
# SENTRY_PUBLIC = False

# workaround to not conflict with standard CSRF_COOKIE_NAME on same hostname
CSRF_COOKIE_NAME = 'sentrycsrftoken'
